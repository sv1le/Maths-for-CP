void isPrime(int arr[], int n) {
    int max_val = *max_element(arr, arr + n);
    vector <bool> isPrime(max_val + 1, true);
    isPrime[0] = isPrime[1] = 0;
    for (int i = 2; i <= max_val; ++i)
    {
        if (isPrime[i] == 1) {
            for (int j = 2 * i; j <= max_val ; j += i) {
                isPrime[j] = 0;
            }
        }
    }
    int minimum = INT_MAX;
    int maximum = INT_MIN;
    for (int i = 0; i < n; i++)
        if (isPrime[arr[i]]) {
            minimum = min(minimum, arr[i]);
            maximum = max(maximum, arr[i]);
        }

    cout << "Minimum : " << minimum << endl;
    cout << "Maximum : " << maximum << endl;

}

int main() {
    int arr[] = { 1, 2, 3, 4, 5, 6, 7 };
    int n = sizeof(arr) / sizeof(arr[0]);

    isPrime(arr, n);

    return 0;
}
